{"version":3,"file":"index.min.js","sources":["../src/index.js"],"sourcesContent":["import * as Repository from 'block_novelties_notices/repository';\nimport Ajax from 'core/ajax';\n\nexport const init = () => {\n\n    // eslint-disable-next-line no-undef\n        new Vue({\n        el: '#block_novelties_notices',\n        // eslint-disable-next-line no-undef\n        vuetify: new Vuetify(),\n        data: {\n            // Recolecion de data no limpiada\n            novelties: null,\n            alertsConfigs: null,\n            alerts: [],\n            langKeys: [],\n            // Renderizado final,\n            dataToRender: [],\n            // Variables de la aplicacion/bloque\n            tab: null\n        },\n        methods: {\n            async getLangsKey() {\n                var langskeys = null;\n                // Chequeamos si existe dentro de la variable global M\n                // si no existe mandamos a hacer la peticion caso contrario tomamos lo que ya existe\n                if (!M.hasOwnProperty(\"plugins\")) {\n                    var response = await Ajax.call([{\n                        methodname: 'local_alerts_front_get_langs',\n                        args: {}\n                    }])[0];\n                    langskeys = JSON.parse(response.lang);\n                } else {\n                    // eslint-disable-next-line no-console\n                    langskeys = M.plugins.courseView.langsKeys;\n                }\n                this.langKeys = langskeys;\n            },\n            async getNovelties() {\n                let args = {\n                    course_id: M.cfg.courseId == 1 ? null : M.cfg.courseId\n                    // Limit: models.limit\n                };\n\n                let novelties = await Repository.getNovelties(args);\n\n                for (let i = 0; i < novelties.length; i++) {\n                    novelties[i].is_active = i === 0;\n                    novelties[i].is_novelty = true;\n                }\n\n                this.novelties = novelties;\n            },\n            async getAlertsConfigs() {\n                var configskeys = null;\n                // Chequeamos si existe dentro de la variable global M\n                // si no existe mandamos a hacer la peticion caso contrario tomamos lo que ya existe\n                if (!M.hasOwnProperty(\"plugins\")) {\n                    var response = await Ajax.call([{\n                        methodname: 'local_alerts_front_get_configs',\n                        args: {\n                            userid: M.cfg.contextInstanceId\n                        }\n                    }])[0];\n                    configskeys = JSON.parse(response.configs);\n                } else {\n                    // eslint-disable-next-line no-console\n                    configskeys = M.plugins.courseView.configs;\n                }\n                this.alertsConfigs = configskeys;\n            },\n            async getAlerts() {\n                var params = new URLSearchParams();\n                params.set('userid', this.alertsConfigs.user_id);\n                params.set('institution', this.alertsConfigs.institution);\n                params.set('modality', this.alertsConfigs.modality);\n                params.set('courseid', M.cfg.courseId);\n\n                var fetchurl = `${this.alertsConfigs.urlapi}/notices?${params.toString()}`;\n\n                var response = await fetch(`${fetchurl}`).catch(function() {\n                    return undefined;\n                });\n\n                if (response !== undefined && response.status !== 404) {\n                    this.alerts = await response.json();\n                }\n            },\n            orderTopics(noveltiesTopic, alertsTopic) {\n                const orderTopics = [\n                    'forum_news',\n                    'overdue_activities',\n                    'activities_course_soon_close',\n                    'corrected_activities',\n                    'direct_response_forum',\n                    'new_activities',\n                    'direct_message_teacher'\n                ];\n\n                var actualTopics = noveltiesTopic.concat(alertsTopic);\n\n                // Limpia cualquier null que me pueda generar el mapeo\n\n                actualTopics = actualTopics.filter(n => n);\n\n                // eslint-disable-next-line max-len\n                return actualTopics.sort(\n                    (a, b) => orderTopics.indexOf(a.abbreviation) - orderTopics.indexOf(b.abbreviation)\n                );\n            },\n            fusionAlertAndNovelties() {\n                this.dataToRender = this.alerts;\n                this.dataToRender = this.dataToRender.concat(this.novelties);\n            },\n            cleanDataToRender() {\n                var newRenderBase = [];\n                // eslint-disable-next-line no-console\n                for (let i = 0; i < this.dataToRender.length; i++) {\n                    let element = this.dataToRender[i];\n                    var object = {};\n\n                    object.abbreviation = element.abbreviation;\n                    object.count = element.count || element.count_notices;\n                    object.description = this.getDescriptionString(element);\n                    object.icon = element.icon;\n                    object.id = element.id;\n                    object.permanent = element.is_permanent || false;\n                    object.langkey = element.lang_key;\n                    object.name = element.name;\n                    object.notices = element.notices || element.novelties;\n                    object.isNovelty = element.is_novelty || false;\n\n                    var arraynoticesmapped = [];\n\n                    for (let j = 0; j < object.notices.length; j++) {\n                        var elementnotices = object.notices[j];\n\n                        var noticesObj = {};\n                        noticesObj.id = elementnotices.id;\n                        noticesObj.title = this.getTitleString(elementnotices, element);\n                        noticesObj.detail = this.getDetailString(elementnotices, element);\n                        noticesObj.icon = this.getIcon(elementnotices, element);\n                        noticesObj.viewed = elementnotices.is_view;\n                            noticesObj.url = elementnotices.url || false;\n                            // NoticesObj.detailCounter = this.getDetailCounter(elementnotices,element);\n                        arraynoticesmapped.push(noticesObj);\n                    }\n\n                    object.notices = arraynoticesmapped;\n\n                    if (object.count > 0) {\n                        newRenderBase.push(object);\n                    }\n                }\n\n                this.dataToRender = newRenderBase;\n            },\n            getDetailCounter(element, elementParent) {\n                if (elementParent.is_novelty) {\n                    return false;\n                } else {\n                    return element.title.value;\n                }\n            },\n            getIcon(element, elementParent) {\n                if (elementParent.is_novelty) {\n                    return element.icon;\n                } else {\n                    // eslint-disable-next-line no-console\n                    return elementParent.icon;\n                }\n            },\n            getDescriptionString(element) {\n                if (element.description === 'lang.ac_son_close_desc') {\n                    return this.langKeys.about_to_close_block_description;\n                } else if (element.description === 'lang.overdue_activities_desc') {\n                    return this.langKeys.overdue_activity_block_description;\n                } else if (element.description === 'lang.ac_direct_message_desc') {\n                    return this.langKeys.not_read_message_block_description;\n                } else if (element.is_novelty) {\n                    return element.description;\n                } else {\n                    return '';\n                }\n            },\n            getTitleString(element, elementParent) {\n                if (elementParent.is_novelty) {\n                    return element.title;\n                } else {\n                    return element.detail;\n                }\n            },\n            getDetailString(element, elementParent) {\n                if (elementParent.is_novelty) {\n                    return `${element.message}`;\n                } else {\n                    return `${this.langKeys[element.title.lang_key]} ${element.title.value}`;\n                }\n            },\n            getIconImage(element) {\n                return M.util.image_url(element.icon.key, element.icon.component);\n            },\n            async markasview(element, elementParent) {\n                var error = false;\n                if (!elementParent.permanent){\n                    if(elementParent.isNovelty){\n                        let args = {\n                            novelty_id: element.id,\n                            type_novelty: elementParent.abbreviation\n                        };\n\n                        var request = await Repository.markedAsRead(args);\n                        if(!request.is_view){\n                            error = true;\n                        }\n                    } else {\n                        var fetchUrl = `${this.alertsConfigs.urlapi}/notices/${element.id}/marked-viewed`;\n                        var request = await fetch(fetchUrl, {\n                            method: 'PUT'\n                        });\n\n                        if (request.status !== 204) {\n                            error = true;\n                        }\n                    }\n\n                    if(!error){\n                        var indexParent = this.dataToRender.findIndex((x) => {\n                            return x.abbreviation === elementParent.abbreviation;\n                        });\n\n                        if (indexParent > -1){\n                            var indexNotices = this.dataToRender[indexParent].notices.findIndex((x) => {\n                                return x.id === element.id;\n                            });\n\n                            this.dataToRender[indexParent].notices.splice(indexNotices, 1);\n\n                            // eslint-disable-next-line max-depth\n                            if (this.dataToRender[indexParent].notices.length === 0) {\n                                this.dataToRender.splice(indexParent, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        mounted: async function() {\n            await this.getLangsKey();\n            await this.getNovelties();\n            await this.getAlertsConfigs();\n            await this.getAlerts();\n            await this.fusionAlertAndNovelties();\n            await this.cleanDataToRender();\n        },\n        template: `\n            <v-app>\n                <v-main>\n                    <v-tabs center-active show-arrows v-model=\"tab\" grow>\n                        <v-tab v-for=\"i in dataToRender\" :key=\"i.abbreviation\">\n                            {{i.name}}\n                            <v-badge inline :content=\"i.notices.length\">\n                            </v-badge>\n                        </v-tab>\n                    </v-tabs>\n                    <v-divider class=\"ma-0\"></v-divider>\n                    <v-tabs-items v-model=\"tab\">\n                        <v-tab-item v-for=\"i in dataToRender\" :key=\"i.abbreviation\">\n                            <div class=\"pt-2\">\n                                <div class=\"font-weight-bold\">\n                                    {{i.description}}\n                                </div>\n                                <div class=\"my-2 mx-1\" style=\"max-height: 190px; overflow-y: auto;\">\n                                    <v-hover v-slot=\"{ hover }\" v-for=\"j in i.notices\" :key=\"j.id\">\n                                        <v-card class=\"mb-1 mr-1 d-flex pa-2\" flat \n                                        :color=\"hover ? '#f8f9fa' : ''\"\n                                        >\n                                            <div class=\"d-flex flex-grow-1\">\n                                            <a :href=\"j.url ? j.url:'#'\" class=\"d-flex flex-grow-1\">\n                                                <div class=\"d-flex align-center\">\n                                                    <div v-if=\"i.isNovelty\"\n                                                        class=\"activityiconcontainer \n                                                        assessment \n                                                        collaboration \n                                                        icon_novelties_alerts\n                                                        pa-1\n                                                        courseicon mr-3\"\n                                                        :class=\"j.purpose\">\n                                                        <v-img :src=\"getIconImage(j)\" class=\"activityicon\"></v-img>    \n                                                    </div>\n                                                    <div class=\"activityiconcontainer\n                                                    assessment\n                                                    collaboration\n                                                    icon_novelties_alerts\n                                                    pa-1\n                                                    courseicon mr-3 activityicon\n                                                    \" v-else v-html=\"j.icon\">\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    <div v-html=\"j.title\" class=\"\n                                                        font-weight-bold\n                                                        primary--text\n                                                    \"></div>\n                                                    <div v-html=\"j.detail\" class=\"\n                                                        d-flex align-center \n                                                        font-weight-medium\n                                                        primary--text\n                                                        text-body-2\n                                                    \"></div>\n                                                </div>\n                                            </a>\n                                            </div>\n                                            <div v-if=\"!i.permanent\" class=\"d-flex align-center justify-center\"\n                                            style=\"text-decoration: none\"\n                                            >\n                                                <v-btn icon @click=\"markasview(j,i)\">\n                                                    <v-icon>\n                                                        mdi-eye\n                                                    </v-icon>\n                                                </v-btn>\n                                            </div>                                        \n                                        </v-card>\n                                    </v-hover>\n                                </div>\n                            </div>\n                        </v-tab-item>\n                    </v-tabs-items>\n                </v-main>\n            </v-app>\n        `\n    });\n};"],"names":["Vue","el","vuetify","Vuetify","data","novelties","alertsConfigs","alerts","langKeys","dataToRender","tab","methods","langskeys","M","hasOwnProperty","plugins","courseView","langsKeys","response","Ajax","call","methodname","args","JSON","parse","lang","course_id","cfg","courseId","Repository","getNovelties","i","length","is_active","is_novelty","configskeys","configs","userid","contextInstanceId","params","URLSearchParams","set","this","user_id","institution","modality","fetchurl","urlapi","toString","fetch","catch","undefined","status","json","orderTopics","noveltiesTopic","alertsTopic","actualTopics","concat","filter","n","sort","a","b","indexOf","abbreviation","fusionAlertAndNovelties","cleanDataToRender","newRenderBase","element","object","count","count_notices","description","getDescriptionString","icon","id","permanent","is_permanent","langkey","lang_key","name","notices","isNovelty","arraynoticesmapped","j","elementnotices","noticesObj","title","getTitleString","detail","getDetailString","getIcon","viewed","is_view","url","push","getDetailCounter","elementParent","value","about_to_close_block_description","overdue_activity_block_description","not_read_message_block_description","message","getIconImage","util","image_url","key","component","error","novelty_id","type_novelty","markedAsRead","fetchUrl","method","indexParent","findIndex","x","indexNotices","splice","mounted","async","getLangsKey","getAlertsConfigs","getAlerts","template"],"mappings":"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"}