{"version":3,"file":"index.min.js","sources":["../src/index.js"],"sourcesContent":["import * as Repository from 'block_novelties_notices/repository';\nimport Ajax from 'core/ajax';\n\nexport const init = () => {\n\n        new Vue({\n        el: '#block_novelties_notices',\n        vuetify: new Vuetify(),\n        data: {\n            //recolecion de data no limpiada\n            novelties: null,\n            alertsConfigs: null,\n            alerts: null,\n            langKeys: [],\n            //renderizado final,\n            topicsToRender: [],\n            containerToRender:[],\n            //variables de la aplicacion/bloque\n            tab:null\n        },\n        methods: {\n            async getLangsKey(){\n                var langskeys = null;\n                // Chequeamos si existe dentro de la variable global M\n                // si no existe mandamos a hacer la peticion caso contrario tomamos lo que ya existe\n                if (!M.hasOwnProperty(\"plugins\")) {\n                    var response = await Ajax.call([{\n                        methodname: 'local_alerts_front_get_langs',\n                        args: {}\n                    }])[0];\n                    langskeys = JSON.parse(response.lang);\n                } else {\n                    // eslint-disable-next-line no-console\n                    langskeys = M.plugins.courseView.langsKeys;\n                }\n                this.langKeys = langskeys;\n            },\n            async getNovelties() {\n                let args = {\n                    course_id: M.cfg.courseId == 1 ? null : M.cfg.courseId\n                    // Limit: models.limit\n                };\n\n                let novelties = await Repository.getNovelties(args);\n\n                for (let i = 0; i < novelties.length; i++) {\n                    novelties[i].is_active = i === 0;\n                    novelties[i].is_novelty = true;\n                }\n\n                this.novelties = novelties;\n            },\n            async getAlertsConfigs() {\n                var configskeys = null;\n                // Chequeamos si existe dentro de la variable global M\n                // si no existe mandamos a hacer la peticion caso contrario tomamos lo que ya existe\n                if (!M.hasOwnProperty(\"plugins\")) {\n                    var response = await Ajax.call([{\n                        methodname: 'local_alerts_front_get_configs',\n                        args: {\n                            userid: M.cfg.contextInstanceId\n                        }\n                    }])[0];\n                    configskeys = JSON.parse(response.configs);\n                } else {\n                    // eslint-disable-next-line no-console\n                    configskeys = M.plugins.courseView.configs;\n                }\n                this.alertsConfigs = configskeys;\n            },\n            async getAlerts() {\n                var params = new URLSearchParams();\n                params.set('userid', this.alertsConfigs.user_id);\n                params.set('institution', this.alertsConfigs.institution);\n                params.set('modality', this.alertsConfigs.modality);\n                params.set('courseid', M.cfg.courseId);\n\n                var fetchurl = `${this.alertsConfigs.urlapi}/notices?${params.toString()}`;\n\n                var response = await fetch(`${fetchurl}`).catch(function() {\n                    return undefined;\n                });\n\n                if (response !== undefined && response.status !== 404) {\n                    this.alerts = await response.json();\n                }\n            },\n            async mapTabsTopics() {\n                var containerToRender = [];\n\n                var mappedTopicsNovelties = this.novelties.map(\n                    function(e) {\n                        var topicObj = {};\n                        topicObj.abbreviation = e.abbreviation;\n                        topicObj.name = e.name;\n                        topicObj.count = e.novelties.length;\n                        return topicObj;\n                    }\n                );\n\n                if (this.alerts !== undefined) {\n\n                    // Await deleteTabChildren();\n                    let mappedTopicsAlerts = [];\n\n                    for (let i = 0; i < this.alerts.length; i++) {\n                        let e = this.alerts[i];\n                        if(e.notices.length){\n                            var topicObj = {};\n                            topicObj.abbreviation = e.abbreviation;\n                            topicObj.name = this.langKeys[e.lang_key];\n                            topicObj.count = e.notices.length;\n                            topicObj.permanent = 'dimisible';\n                            topicObj.isPermanent = false;\n                            mappedTopicsAlerts.push(topicObj);\n                        }\n                    }\n\n                    let mappedAlertToNovelties = [];\n\n                    for (let i = 0; i < this.alerts.length; i++) {\n                        let e = this.alerts[i];\n                        if (e.count_notices > 0) {\n                            var alertsObj = {};\n                            alertsObj.abbreviation = e.abbreviation;\n                            alertsObj.name = this.langKeys[e.notices[0].title.lang_key];\n                            alertsObj.count = e.notices.length;\n                            alertsObj.id = e.id;\n                            // Logica aparte para la descripcion de cada bloque\n                            if (e.lang_key === \"lang.ac_son_close\") {\n                                alertsObj.description = this.langKeys.about_to_close_block_description;\n                            } else if (e.lang_key === \"lang.overdue_activities\") {\n                                alertsObj.description = this.langKeys.overdue_activity_block_description;\n                            } else if (e.lang_key === \"lang.ac_direct_message\") {\n                                alertsObj.description = this.langKeys.not_read_message_block_description;\n                            } else {\n                                alertsObj.description = \"Description not found\";\n                            }\n                            alertsObj.novelties = e.notices;\n                            alertsObj.icon = e.icon;\n                            alertsObj.type = 'alert';\n                            alertsObj.permanent = e.is_permanent ? 'permanent' : 'dimisible';\n                            alertsObj.isPermanent = e.is_permanent;\n                            mappedAlertToNovelties.push(alertsObj);\n                        }\n                    }\n\n                    var topics = await this.orderTopics(mappedTopicsNovelties, mappedTopicsAlerts);\n\n                    this.topicsToRender = topics;\n                    containerToRender = this.novelties.concat(mappedAlertToNovelties);\n                } else {\n                    this.topicsToRender = mappedTopicsNovelties;\n                    // eslint-disable-next-line no-unused-vars\n                    containerToRender = this.novelties;\n                }\n                this.containerToRender = containerToRender;\n            },\n            orderTopics(noveltiesTopic, alertsTopic){\n                const orderTopics = [\n                    'forum_news',\n                    'overdue_activities',\n                    'activities_course_soon_close',\n                    'corrected_activities',\n                    'direct_response_forum',\n                    'new_activities',\n                    'direct_message_teacher'\n                ];\n\n                var actualTopics = noveltiesTopic.concat(alertsTopic);\n\n                // Limpia cualquier null que me pueda generar el mapeo\n\n                actualTopics = actualTopics.filter(n => n);\n\n                // eslint-disable-next-line max-len\n                return actualTopics.sort(\n                    (a, b) => orderTopics.indexOf(a.abbreviation) - orderTopics.indexOf(b.abbreviation)\n                );\n            }\n        },\n        mounted: async function() {\n            await this.getLangsKey();\n            await this.getNovelties();\n            await this.getAlertsConfigs();\n            await this.getAlerts();\n            this.mapTabsTopics();\n        },\n        template: `\n            <v-app>\n                <v-main>\n                    <v-tabs center-active show-arrows v-model=\"tab\">\n                        <v-tab v-for=\"i in topicsToRender\" :key=\"i.abbreviation\">\n                            {{i.name}}\n                            <v-badge inline :content=\"i.count\">\n                            </v-badge>\n                        </v-tab>\n                    </v-tabs>\n                    \n                    <v-tabs-items v-model=\"tab\">\n                        <v-tab-item v-for=\"i in containerToRender\">\n                            {{i}}\n                        </v-tab-item>\n                    </v-tabs-items>\n                </v-main>\n            </v-app>\n        `\n    });\n};"],"names":["Vue","el","vuetify","Vuetify","data","novelties","alertsConfigs","alerts","langKeys","topicsToRender","containerToRender","tab","methods","langskeys","M","hasOwnProperty","plugins","courseView","langsKeys","response","Ajax","call","methodname","args","JSON","parse","lang","course_id","cfg","courseId","Repository","getNovelties","i","length","is_active","is_novelty","configskeys","configs","userid","contextInstanceId","params","URLSearchParams","set","this","user_id","institution","modality","fetchurl","urlapi","toString","fetch","catch","undefined","status","json","mappedTopicsNovelties","map","e","topicObj","abbreviation","name","count","mappedTopicsAlerts","notices","lang_key","permanent","isPermanent","push","mappedAlertToNovelties","count_notices","alertsObj","title","id","description","about_to_close_block_description","overdue_activity_block_description","not_read_message_block_description","icon","type","is_permanent","topics","orderTopics","concat","noveltiesTopic","alertsTopic","actualTopics","filter","n","sort","a","b","indexOf","mounted","async","getLangsKey","getAlertsConfigs","getAlerts","mapTabsTopics","template"],"mappings":"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"}